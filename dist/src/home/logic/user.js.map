{"version":3,"sources":["../../../../src/home/logic/user.js"],"names":["test","header","userModel","model","account","post","isExist","console","log","fail","session","allowMethods","sessionCode","Number","get","errors","code","redirect","cookie","reset","think","logic","base"],"mappings":"AAAA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAGc,CAEZ;;;;;;;;;;aAGI,QAAD,CAAWA,IAAX,CAAgB,KAAKC,MAAL,CAAY,SAAZ,CAAhB,C;;;;;AACEC,iB,GAAY,KAAKC,KAAL,CAAW,MAAX,C;AACZC,e,GAAU,KAAKC,IAAL,CAAU,SAAV,C;;eACMH,UAAUI,OAAV,CAAkBF,OAAlB,C;;;AAAhBE,e;;AACJC,gBAAQC,GAAR,CAAYF,OAAZ;;YACIA,O;;;;;yCACI,KAAKG,IAAL,CAAU,iBAAV,C;;;;eAED,KAAKC,OAAL,CAAa,OAAb,EAAsB,IAAtB,C;;;;;;;;;;;;;;;;;;;;;;;;;AAMR,aAAKC,YAAL,GAAoB,KAApB;;eACwB,KAAKD,OAAL,CAAa,MAAb,C;;;AAApBE,mB;;cACAC,OAAO,KAAKC,GAAL,CAAS,MAAT,CAAP,MAA6BD,OAAOD,WAAP,C;;;;;0CACzB,KAAKH,IAAL,CAAU,gBAAV,EAA4B,KAAKM,MAAL,EAA5B,C;;;;;;;;;;;;;;;;;;;;;;;;;;eAKS,KAAKL,OAAL,CAAa,MAAb,C;;;AAAbM,Y;;AACJT,gBAAQC,GAAR,CAAYQ,IAAZ;;YACIA,I;;;;;0CACI,KAAKC,QAAL,CAAc,aAAd,C;;;;;;;;;;;;;;;;;;;;;;;;aAKL,KAAKC,MAAL,CAAY,KAAZ,C;;;;;0CACK,KAAKD,QAAL,CAAc,aAAd,C;;;AAER,aAAKN,YAAL,GAAoB,UAApB;;;;;;;;;;;;;;;;;;;;;;;;AAIA,aAAKA,YAAL,GAAoB,KAApB;;;;;;;;;;;;;;;;;;;;;;;;AAIA,aAAKA,YAAL,GAAoB,MAApB;;;;;;;;;;;;;;;;;;;;;;;;aAIG,KAAKO,MAAL,CAAY,KAAZ,C;;;;;0CACK,KAAKD,QAAL,CAAc,aAAd,C;;;;;;;;;;;;;;;;;;;;;;;;;;eAKU,KAAKP,OAAL,CAAa,OAAb,C;;;AAAdS,a;;YACAA,K;;;;;0CACI,KAAKF,QAAL,CAAc,aAAd,C;;;;;;;;;;;;;;;;;;;;;;;;AAKR,aAAKN,YAAL,GAAoB,MAApB;;;;;;;;;;;;;;;;;;EAhE2BS,MAAMC,KAAN,CAAYC,I","file":"user.js","sourcesContent":["/**\n * Created by fuyazhou on 17/7/11.\n */\n'use strict';\n\nexport default class extends think.logic.base {\n\tindexAction(){\n\t\n\t}\n\t\n\tasync getvfcodeAction() {\n\t\tif((/verify/).test(this.header('Referer'))){\n\t\t\tlet userModel = this.model('user')\n\t\t\tlet account = this.post('account')\n\t\t\tlet isExist = await userModel.isExist(account)\n\t\t\tconsole.log(isExist)\n\t\t\tif(!isExist){\n\t\t\t\treturn this.fail('invalid account')\n\t\t\t} else {\n\t\t\t\tawait this.session('reset', true)\n\t\t\t}\n\t\t}\n\t}\n\t\n\tasync verifycodeAction() {\n\t\tthis.allowMethods = 'get'\n\t\tlet sessionCode = await this.session('code')\n\t\tif (Number(this.get('code')) !== Number(sessionCode)) {\n\t\t\treturn this.fail('validate error', this.errors())\n\t\t}\n\t}\n\t\n\tasync passwordAction() {\n\t\tlet code = await this.session('code')\n\t\tconsole.log(code)\n\t\tif(!code){\n\t\t\treturn this.redirect('/user/index')\n\t\t}\n\t}\n\t\n\tasync registerAction() {\n\t\tif(this.cookie('uid')){\n\t\t\treturn this.redirect('/user/index')\n\t\t}\n\t\tthis.allowMethods = 'get,post'\n\t}\n\t\n\tasync loginAction() {\n\t\tthis.allowMethods = 'get'\n\t}\n\t\n\tasync loginintosystemAction() {\n\t\tthis.allowMethods = 'post'\n\t}\n\t\n\tasync verifyAction() {\n\t\tif(this.cookie('uid')) {\n\t\t\treturn this.redirect('/user/index')\n\t\t}\n\t}\n\t\n\tasync resetAction() {\n\t\tlet reset = await this.session('reset')\n\t\tif(!reset){\n\t\t\treturn this.redirect('/user/index')\n\t\t}\n\t}\n\t\n\tasync resetpasswordAction() {\n\t\tthis.allowMethods = 'post'\n\t}\n}"]}
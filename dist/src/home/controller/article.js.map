{"version":3,"sources":["../../../../src/home/controller/article.js"],"names":["assign","get","display","isPost","userid","post","articleid","timestamp","content","userModel","model","getAvatarInfoByUserId","parseInt","authorInfo","authorAvatar","avatar","authorName","nickname","articleModel","addComment","data","success","currentPage","perPageNum","getPerPageItems","getArticleItemByid","getColByArticleId","authoridRowData","col","getRelativeArticlesByCol","relativeArticles","length","slice","likes","updateLikesByArticleId","art_lines","updateLikes","getLikes","rowdata","JSON","parse","indexOf","commentModel","getCommentByPostId","comment","commentLength","splice","commentContent"],"mappings":"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","file":"article.js","sourcesContent":["'use strict'\nimport base from './base.js';\nexport default class extends base {\n    detailAction() {\n        this.assign('articleid', this.get('articleid'));\n        return this.display('article/detail.html');\n    }\n\n    async addcommentAction() {\n        if (this.isPost()) {\n            let userid = this.post(\"userid\");\n            let articleid = this.post('articleid');\n            let timestamp = this.post('timestamp');\n            let content = this.post('content');\n            let userModel = this.model('user');\n            let authorInfo = await userModel.getAvatarInfoByUserId(parseInt(userid));\n            let authorAvatar = authorInfo[0].avatar;\n            let authorName = authorInfo[0].nickname;\n            let articleModel = this.model('comment');\n            let data = await articleModel.addComment(parseInt(userid), parseInt(articleid), authorAvatar, authorName, content, parseInt(timestamp));\n            return this.success(data);\n        }\n    }\n\n    async refresharticlesAction() {\n        let currentPage = this.get('currentPage');\n\n        let perPageNum = this.get('perPageNums');\n\n        let articleModel = this.model('article');\n        let data = await articleModel.getPerPageItems(perPageNum ,currentPage);\n        return this.success(data);\n    }\n\n    async getarticlebyarticleidAction() {\n\n        let articleid = this.get('articleid');\n        let articleModel = this.model('article');\n        let data = await articleModel.getArticleItemByid(articleid);\n        return this.success(data);\n\n    }\n\n    async getrelativearticleAction() {\n        let articleid = this.get('articleid');\n        let articleModel = this.model('article');\n        let authoridRowData = await articleModel.getColByArticleId(articleid);\n        let col = authoridRowData[0].col;\n        let relativeArticles = await articleModel.getRelativeArticlesByCol(col, articleid);\n        if (relativeArticles.length >= 2) {\n           relativeArticles= relativeArticles.slice(0, 2);\n        }\n        return this.success(relativeArticles);\n\n    }\n\n    async refreshlikesAction() {\n        let likes = this.post('likes');\n        let articleid = this.post('articleid');\n        let articleModel = this.model('article');\n        let art_lines = await articleModel.updateLikesByArticleId(articleid, likes);\n        let userModel = this.model('user');\n        let data = await userModel.updateLikes(articleid);\n        return this.success(data);\n    }\n\n    async getlikestatusAction() {\n        let articleid = this.get('articleid');\n        let userModel = this.model('user');\n        let rowdata = await userModel.getLikes();\n        let likes = JSON.parse(rowdata[0].likes);\n        let data;\n        if (likes.indexOf(articleid) >= 0) {\n            data = true;\n        } else {\n            data = false;\n        }\n        return this.success(data);\n\n    }\n\n\n\n    async getcommentbyarticleidAction() {\n        let articleid = this.get('articleid');\n        let commentModel = this.model('comment');\n        let comment = await commentModel.getCommentByPostId(parseInt(articleid));\n        let commentLength = comment.length;\n        if (commentLength >= 2) {\n             comment = comment.splice(0, 2)\n        }\n        return this.success({commentLength:commentLength,commentContent: comment});\n    }\n}"]}
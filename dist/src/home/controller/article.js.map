{"version":3,"sources":["../../../../src/home/controller/article.js"],"names":["articleId","get","checkLogin","console","log","cookie","readList","Array","push","parseInt","JSON","parse","indexOf","assign","display","isPost","userid","post","articleid","timestamp","content","userModel","model","getAvatarInfoByUserId","authorInfo","authorAvatar","avatar","authorName","nickname","articleModel","addComment","data","success","greyList","invisibleList","length","splice","currentPage","perPageNum","getPerPageItems","getArticleItemByid","getColByArticleId","authoridRowData","col","getRelativeArticlesByCol","relativeArticles","slice","likes","updateLikesByArticleId","art_lines","updateLikes","getLikes","rowdata","commentModel","getCommentByPostId","comment","commentLength","commentContent"],"mappings":"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","file":"article.js","sourcesContent":["'use strict'\nimport base from './base.js';\nexport default class extends base {\n    detailAction() {\n        let articleId = this.get('articleid');\n\n        if (checkLogin(this)) {\n            console.log('Login checked!');\n\n            // to be finished\n\n        } else {\n            if (!this.cookie('readList')) {\n                let readList = new Array();\n                readList.push(parseInt(articleId));\n\n                this.cookie('readList', JSON.stringify(readList));\n            } else {\n                let readList = JSON.parse(this.cookie('readList'));\n                if (readList.indexOf(parseInt(articleId)) < 0) {\n                    readList.push(parseInt(articleId));\n                    this.cookie('readList', JSON.stringify(readList));\n                }\n            }\n        }\n        this.assign('articleid', articleId);\n        return this.display('article/detail.html');\n    }\n\n    async addcommentAction() {\n        if (this.isPost()) {\n            let userid = this.post(\"userid\");\n            let articleid = this.post('articleid');\n            let timestamp = this.post('timestamp');\n            let content = this.post('content');\n            let userModel = this.model('user');\n            let authorInfo = await userModel.getAvatarInfoByUserId(parseInt(userid));\n            let authorAvatar = authorInfo[0].avatar;\n            let authorName = authorInfo[0].nickname;\n            let articleModel = this.model('comment');\n            let data = await articleModel.addComment(parseInt(userid), parseInt(articleid), authorAvatar, authorName, content, parseInt(timestamp));\n            return this.success(data);\n        }\n    }\n\n    async refresharticlesAction() {\n        let greyList = [];\n        let invisibleList = [];\n        if (this.cookie('readList') !== '') {\n            let readList = JSON.parse(this.cookie('readList'));\n            if (readList.length > 5) {\n                greyList = readList.splice(-5, 5);\n                invisibleList = readList;\n            } else {\n                greyList = readList;\n            }\n        }\n        let currentPage = this.get('currentPage');\n        let perPageNum = this.get('perPageNums');\n        let articleModel = this.model('article');\n        let data = await articleModel.getPerPageItems(perPageNum, currentPage, invisibleList);\n        data.greyList = greyList;\n        return this.success(data);\n    }\n\n    async getarticlebyarticleidAction() {\n        let articleid = this.get('articleid');\n        let articleModel = this.model('article');\n        let data = await articleModel.getArticleItemByid(articleid);\n        return this.success(data);\n\n    }\n\n    async getrelativearticleAction() {\n        let articleid = this.get('articleid');\n        let articleModel = this.model('article');\n        let authoridRowData = await articleModel.getColByArticleId(articleid);\n        let col = authoridRowData[0].col;\n        let relativeArticles = await articleModel.getRelativeArticlesByCol(col, articleid);\n        if (relativeArticles.length >= 2) {\n            relativeArticles = relativeArticles.slice(0, 2);\n        }\n        return this.success(relativeArticles);\n\n    }\n\n    async refreshlikesAction() {\n        let likes = this.post('likes');\n        let articleid = this.post('articleid');\n        let articleModel = this.model('article');\n        let art_lines = await articleModel.updateLikesByArticleId(articleid, likes);\n        let userModel = this.model('user');\n        let data = await userModel.updateLikes(articleid);\n        return this.success(data);\n    }\n\n    async getlikestatusAction() {\n        let articleid = this.get('articleid');\n        let userModel = this.model('user');\n        let rowdata = await userModel.getLikes();\n        let likes = JSON.parse(rowdata[0].likes);\n        let data;\n        if (likes.indexOf(articleid) >= 0) {\n            data = true;\n        } else {\n            data = false;\n        }\n        return this.success(data);\n\n    }\n\n    async getcommentbyarticleidAction() {\n        let articleid = this.get('articleid');\n        let commentModel = this.model('comment');\n        let comment = await commentModel.getCommentByPostId(parseInt(articleid));\n        let commentLength = comment.length;\n        if (commentLength >= 2) {\n            comment = comment.splice(0, 2)\n        }\n        return this.success({commentLength: commentLength, commentContent: comment});\n    }\n}"]}
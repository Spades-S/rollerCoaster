{"version":3,"sources":["../../../../src/home/controller/article.js"],"names":["articleId","get","checkLogin","console","log","assign","display","isPost","userid","post","articleid","timestamp","content","userModel","model","getAvatarInfoByUserId","parseInt","authorInfo","authorAvatar","avatar","authorName","nickname","articleModel","addComment","data","success","greyList","invisibleList","session","readList","currentPage","perPageNum","getPerPageItems","forEach","indexOf","el","id","push","getArticleItemByid","getColByArticleId","authoridRowData","col","getRelativeArticlesByCol","relativeArticles","length","slice","likes","uid","cookie","updateLikesByArticleId","art_lines","updateLikes","likecookie","newlikearray","JSON","parse","getLikes","rowdata","commentModel","getCommentByPostId","comment","commentLength","splice","commentContent"],"mappings":"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","file":"article.js","sourcesContent":["'use strict'\nimport base from './base.js';\nexport default class extends base {\n    async detailAction() {\n        let articleId = this.get('articleid');\n\n        if (checkLogin(this)) {\n            console.log('Login checked!');\n\n            // to be finished\n\n        } else {\n        \t/* let readList = (await this.session('readList')) || []\n\t        if (readList.indexOf(parseInt(articleId)) < 0) {\n\t\t        readList.push(parseInt(articleId));\n\t        }\n\t        await this.session('readList', readList) */\n        }\n        this.assign('articleid', articleId);\n        return this.display('article/detail.html');\n    }\n\n    async addcommentAction() {\n        if (this.isPost()) {\n            let userid = this.post(\"userid\");\n            let articleid = this.post('articleid');\n            let timestamp = this.post('timestamp');\n            let content = this.post('content');\n            let userModel = this.model('user');\n            let authorInfo = await userModel.getAvatarInfoByUserId(parseInt(userid));\n            let authorAvatar = authorInfo[0].avatar;\n            let authorName = authorInfo[0].nickname;\n            let articleModel = this.model('comment');\n            let data = await articleModel.addComment(parseInt(userid), parseInt(articleid), authorAvatar, authorName, content, parseInt(timestamp));\n            return this.success(data);\n        }\n    }\n\n    async refresharticlesAction() {\n        let greyList = [];\n        let invisibleList = [];\n        let readList = await this.session('readList') || []\n        /*if (readList) {\n         /!* if (readList.length > 5) { *!/\n\t\t        greyList = readList // .splice(-5, 5);\n\t\t        // console.log('greyList', greyList)\n\t\t        invisibleList = readList;\n         /!* } else {\n                greyList = readList;\n            } *!/\n        }*/\n        let currentPage = this.get('currentPage');\n        let perPageNum = this.get('perPageNums');\n        let articleModel = this.model('article');\n        let data = await articleModel.getPerPageItems(perPageNum, currentPage, readList);\n        data.data.forEach(el => {\n        \tif (readList.indexOf(el.id) === -1) {\n        \t\treadList.push(el.id)\n\t        }\n        })\n        await this.session('readList', readList)\n        return this.success(data);\n    }\n\n    async getarticlebyarticleidAction() {\n        let articleid = this.get('articleid');\n        let articleModel = this.model('article');\n        let data = await articleModel.getArticleItemByid(articleid);\n        return this.success(data);\n\n    }\n\n    async getrelativearticleAction() {\n        let articleid = this.get('articleid');\n        let articleModel = this.model('article');\n        let authoridRowData = await articleModel.getColByArticleId(articleid);\n        let col = authoridRowData[0].col;\n        let relativeArticles = await articleModel.getRelativeArticlesByCol(col, articleid);\n        if (relativeArticles.length >= 2) {\n            relativeArticles = relativeArticles.slice(0, 2);\n        }\n        return this.success(relativeArticles);\n\n    }\n\n    async refreshlikesAction() {\n        let likes = this.post('likes');\n        let uid = this.cookie('uid');\n        let articleid = parseInt(this.post('articleid'));\n        let articleModel = this.model('article');\n        let art_lines = await articleModel.updateLikesByArticleId(articleid, likes);\n        if (uid) {\n            let userModel = this.model('user');\n            let data = await userModel.updateLikes(articleid, uid);\n            return this.success(data);\n        } else {\n            let likecookie = this.cookie('likecookie');\n            let newlikearray = [];\n            if (likecookie) {\n                newlikearray = JSON.parse(likecookie);\n                if (newlikearray.indexOf(articleid) < 0) {\n                    newlikearray.push(articleid);\n                }\n            } else {\n                newlikearray.push(articleid);\n            }\n            this.cookie('likecookie', JSON.stringify(newlikearray));\n            return this.success();\n        }\n\n    }\n\n    async getlikestatusAction() {\n\n        let uid = this.cookie('uid');\n        let articleid = parseInt(this.get('articleid'));\n        let likes = [];\n        if (uid) {\n            let userModel = this.model('user');\n            let rowdata = await userModel.getLikes(uid);\n            likes = JSON.parse(rowdata[0].likes);\n        } else {\n            if (this.cookie('likecookie')) {\n                likes = JSON.parse(this.cookie('likecookie'));\n            }\n        }\n\n        let data;\n        if (likes.indexOf(articleid) >= 0) {\n            data = true;\n        } else {\n            data = false;\n        }\n        return this.success(data);\n    }\n\n    async getcommentbyarticleidAction() {\n        let articleid = this.get('articleid');\n        let commentModel = this.model('comment');\n        let comment = await commentModel.getCommentByPostId(parseInt(articleid));\n        let commentLength = comment.length;\n        if (commentLength >= 2) {\n            comment = comment.splice(0, 2)\n        }\n        return this.success({commentLength: commentLength, commentContent: comment});\n    }\n}"]}
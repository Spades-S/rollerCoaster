{"version":3,"sources":["../../../../src/home/model/article.js"],"names":["Article","args","tableName","number","currentPage","order","where","type","page","countSelect","data","id","alias","field","select","articleid","authorid","col","relativeArticles","likes","update","lines","think","model","base"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACMA,O;;;;;;;;;;+BACY;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AACV,wKAAcA,IAAd;AACA,iBAAKC,SAAL,GAAiB,SAAjB;AACH;;;;mGACqBC,M,EAAQC,W;;;;;;;uCACT,KAAKC,KAAL,CAAW,iBAAX,EAA8BC,KAA9B,CAAoC,EAAEC,MAAM,CAAR,EAApC,EAAiDC,IAAjD,CAAuDJ,WAAvD,EAAmED,MAAnE,EAA2EM,WAA3E,E;;;AAAbC,oC;iEACGA,I;;;;;;;;;;;;;;;;;;;qGAEcC,E;;;;;;;uCACJ,KAAKC,KAAL,CAAW,SAAX,EACZC,KADY,CACN,6DADM,EAEZP,KAFY,CAEN,EAAEK,IAAIA,EAAN,EAFM,EAEMG,MAFN,E;;;AAAbJ,oC;kEAGGA,I;;;;;;;;;;;;;;;;;;;qGAGaK,S;;;;;;;uCACC,KAAKF,KAAL,CAAW,KAAX,EAAkBP,KAAlB,CAAwB,EAAEK,IAAII,SAAN,EAAxB,EAA2CD,MAA3C,E;;;AAAjBE,wC;kEACGA,Q;;;;;;;;;;;;;;;;;;;qGAEoBC,G,EAAKF,S;;;;;;;uCACH,KAAKF,KAAL,CAAW,gCAAX,EAA6CR,KAA7C,CAAmD,iBAAnD,EAAsEC,KAAtE,CAA4E,EAAEW,KAAKA,GAAP,EAAYN,IAAI,CAAC,IAAD,EAAOI,SAAP,CAAhB,EAAmCR,MAAM,CAAzC,EAA5E,EAA0HO,MAA1H,E;;;AAAzBI,gD;kEACGA,gB;;;;;;;;;;;;;;;;;;;qGAEkBH,S,EAAWI,K;;;;;;;uCAClB,KAAKb,KAAL,CAAW,EAAEK,IAAII,SAAN,EAAX,EAA8BK,MAA9B,CAAqC,EAAED,OAAOA,KAAT,EAArC,C;;;AAAdE,qC;kEACGA,K;;;;;;;;;;;;;;;;;;EA1BOC,MAAMC,KAAN,CAAYC,I;;kBAgCnBxB,O","file":"article.js","sourcesContent":["'use strict'\nclass Article extends think.model.base {\n    init(...args) {\n        super.init(...args);\n        this.tableName = 'article';\n    }\n    async getPerPageItems(number, currentPage) {\n        let data = await this.order('updateTime DESC').where({ type: 0 }).page( currentPage,number).countSelect();\n        return data;\n    }\n    async getArticleItemByid(id) {\n        let data = await this.alias('article')\n            .field('title, authorAvatar, authorName, content, updatetime, likes')\n            .where({ id: id }).select();\n        return data;\n\n    }\n    async getColByArticleId(articleid) {\n        let authorid = await this.field('col').where({ id: articleid }).select();\n        return authorid;\n    }\n    async getRelativeArticlesByCol(col, articleid) {\n        let relativeArticles = await this.field('id, title, description, poster').order('updateTime DESC').where({ col: col, id: ['!=', articleid], type: 0 }).select();\n        return relativeArticles;\n    }\n    async updateLikesByArticleId(articleid, likes) {\n        let lines = await this.where({ id: articleid }).update({ likes: likes });\n        return lines;\n\n    }\n\n}\n\nexport default Article;"]}
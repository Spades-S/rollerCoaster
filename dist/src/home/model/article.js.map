{"version":3,"sources":["../../../../src/home/model/article.js"],"names":["Article","args","tableName","number","currentPage","invisibleList","data","length","order","where","type","page","countSelect","id","alias","field","select","articleid","authorid","col","relativeArticles","likes","update","lines","ids","articles","think","model","base"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACMA,O;;;;;;;;;;+BACY;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AACV,wKAAcA,IAAd;AACA,iBAAKC,SAAL,GAAiB,SAAjB;AACH;;;;mGAEqBC,M,EAAQC,W,EAAaC,a;;;;;;AACnCC,oC;;sCACAD,cAAcE,MAAd,KAAyB,C;;;;;;uCACZ,KAAKC,KAAL,CAAW,iBAAX,EAA8BC,KAA9B,CAAoC;AAC7CC,0CAAM;AADuC,iCAApC,EAEVC,IAFU,CAELP,WAFK,EAEQD,MAFR,EAEgBS,WAFhB,E;;;AAAbN,oC;;;;;;uCAIa,KAAKE,KAAL,CAAW,iBAAX,EAA8BC,KAA9B,CAAoC;AAC7CC,0CAAM,CADuC;AAE7CG,wCAAI,CAAC,OAAD,EAAUR,aAAV;AAFyC,iCAApC,EAGVM,IAHU,CAGLP,WAHK,EAGQD,MAHR,EAGgBS,WAHhB,E;;;AAAbN,oC;;;iEAKGA,I;;;;;;;;;;;;;;;;;;;qGAGcO,E;;;;;;;uCACJ,KAAKC,KAAL,CAAW,SAAX,EAEZC,KAFY,CAEN,kEAFM,EAGZN,KAHY,CAGN,EAACI,IAAIA,EAAL,EAHM,EAGIG,MAHJ,E;;;AAAbV,oC;kEAKGA,I;;;;;;;;;;;;;;;;;;;qGAIaW,S;;;;;;;uCACC,KAAKF,KAAL,CAAW,KAAX,EAAkBN,KAAlB,CAAwB,EAACI,IAAII,SAAL,EAAxB,EAAyCD,MAAzC,E;;;AAAjBE,wC;kEACGA,Q;;;;;;;;;;;;;;;;;;;qGAGoBC,G,EAAKF,S;;;;;;;uCACH,KAAKF,KAAL,CAAW,gCAAX,EAA6CP,KAA7C,CAAmD,iBAAnD,EAAsEC,KAAtE,CAA4E;AACrGU,yCAAKA,GADgG;AAErGN,wCAAI,CAAC,IAAD,EAAOI,SAAP,CAFiG;AAGrGP,0CAAM;AAH+F,iCAA5E,EAI1BM,MAJ0B,E;;;AAAzBI,gD;kEAKGA,gB;;;;;;;;;;;;;;;;;;;qGAGkBH,S,EAAWI,K;;;;;;;uCAClB,KAAKZ,KAAL,CAAW,EAACI,IAAII,SAAL,EAAX,EAA4BK,MAA5B,CAAmC,EAACD,OAAOA,KAAR,EAAnC,C;;;AAAdE,qC;kEACGA,K;;;;;;;;;;;;;;;;;;;qGAGWC,G;;;;;;;uCACG,KAAKT,KAAL,CAAW,2EAAX,EAAwFN,KAAxF,CAA8F,EAACI,IAAI,CAAC,IAAD,EAAOW,GAAP,CAAL,EAA9F,EAAiHR,MAAjH,E;;;AAAjBS,wC;kEACGA,Q;;;;;;;;;;;;;;;;;;EApDOC,MAAMC,KAAN,CAAYC,I;;kBAyDnB5B,O","file":"article.js","sourcesContent":["'use strict'\nclass Article extends think.model.base {\n    init(...args) {\n        super.init(...args);\n        this.tableName = 'article';\n    }\n\n    async getPerPageItems(number, currentPage, invisibleList) {\n        let data;\n        if (invisibleList.length === 0) {\n            data = await this.order('updateTime DESC').where({\n                type: 0,\n            }).page(currentPage, number).countSelect();\n        } else {\n            data = await this.order('updateTime DESC').where({\n                type: 0,\n                id: ['NOTIN', invisibleList],\n            }).page(currentPage, number).countSelect();\n        }\n        return data;\n    }\n\n    async getArticleItemByid(id) {\n        let data = await this.alias('article')\n\n            .field('title, authorAvatar, authorName, content, updatetime, likes, col')\n            .where({id: id}).select();\n\n        return data;\n\n    }\n\n    async getColByArticleId(articleid) {\n        let authorid = await this.field('col').where({id: articleid}).select();\n        return authorid;\n    }\n\n    async getRelativeArticlesByCol(col, articleid) {\n        let relativeArticles = await this.field('id, title, description, poster').order('updateTime DESC').where({\n            col: col,\n            id: ['!=', articleid],\n            type: 0\n        }).select();\n        return relativeArticles;\n    }\n\n    async updateLikesByArticleId(articleid, likes) {\n        let lines = await this.where({id: articleid}).update({likes: likes});\n        return lines;\n\n    }\n    async getLikeArticles(ids){\n        let articles = await this.field('id, title, poster, authorAvatar, authorName, col, description, updateTime').where({id: ['IN', ids]}).select();\n        return articles;\n    }\n\n}\n\nexport default Article;"]}
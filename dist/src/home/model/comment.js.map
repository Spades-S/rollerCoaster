{"version":3,"sources":["../../../../src/home/model/comment.js"],"names":["Comment","args","tableName","userid","articleid","authorAvatar","authorName","content","timestamp","add","insertId","think","log","postid","field","where","select","data","model","base"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACMA,O;;;;;;;;;;+BACY;AAAA;;AAAA,8CAANC,IAAM;AAANA,oBAAM;AAAA;;AACV,wKAAcA,IAAd;AACA,iBAAKC,SAAL,GAAiB,SAAjB;AACH;;;;mGAEgBC,M,EAAQC,S,EAAWC,Y,EAAcC,U,EAAYC,O,EAASC,S;;;;;;;;uCAE1C,KAAKC,GAAL,CAAS;AAC1B,gDAAYN,MADc;AAE1B,oDAAgBE,YAFU;AAG1B,kDAAcC,UAHY;AAI1B,8CAAUF,SAJgB;AAK1B,+CAAWG,OALe;AAM1B,iDAAaC;AANa,iCAAT,C;;;AAAjBE,wC;iEAQGA,Q;;;;;;AAEPC,sCAAMC,GAAN;iEACO,K;;;;;;;;;;;;;;;;;;;qGAMUC,M;;;;;;;uCACJ,KAAKC,KAAL,CAAW,8CAAX,EAA2DC,KAA3D,CAAiE,EAACF,QAAQA,MAAT,EAAjE,EAAmFG,MAAnF,E;;;AAAbC,oC;kEACGA,I;;;;;;;;;;;;;;;;;;EA3BON,MAAMO,KAAN,CAAYC,I;;kBAiCnBnB,O","file":"comment.js","sourcesContent":["'use strict'\nclass Comment extends think.model.base {\n    init(...args) {\n        super.init(...args);\n        this.tableName = 'comment';\n    }\n\n    async addComment(userid, articleid, authorAvatar, authorName, content, timestamp) {\n        try {\n            let insertId = await this.add({\n                \"authorId\": userid,\n                \"authorAvatar\": authorAvatar,\n                \"authorName\": authorName,\n                \"postId\": articleid,\n                \"content\": content,\n                \"timestamp\": timestamp\n            });\n            return insertId;\n        } catch (e) {\n            think.log(`add user cause wrong ${e}`);\n            return false;\n        }\n    }\n\n\n\n    async getCommentByPostId(postid) {\n        let data = await this.field('authorAvatar, authorName, content, timestamp').where({postid: postid}).select();\n        return data;\n    }\n\n\n}\n\nexport default Comment;"]}